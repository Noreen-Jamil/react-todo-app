{"version":3,"sources":["images/logo1.png","components/header/header.js","components/li/li.js","components/body/body.js","App.js","index.js"],"names":["module","exports","Header","id","src","Logo","alt","Li","props","useState","hideShowDivs","setHideShowDivs","hideShowInputFields","setHideShowInputFields","hideShowTaskIcons","setHideShowTaskIcons","hrStyle","applyOpacity","children","todoEditedText","setTodoEditedText","todoEditedTime","setTodoEditedTime","todoEditedDate","setTodoEditedDate","state","name","style","opacity","display","className","onClick","e","taskDone","preventDefault","onTaskDone","title","type","maxLength","value","onChange","target","onTaskEdit","editedTodoDetails","editedTodo","onDelete","Body","todoData","currentTodo","setTodo","currentDate","setDate","currentTime","setTime","setStateUpdate","isTodoUpdated","setTodoUpdated","currentToDoArray","setToDoarray","taskDelete","filter","element","index","taskState","taskEdited","editedTaskObject","todo","time","date","onSubmit","placeholder","alert","map","li","key","App","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6a532f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.35bd7103.png\";","import React from \"react\";\r\nimport Logo from \"../../images/logo1.png\";\r\nimport \"./header.css\"\r\n\r\nconst Header = () =>{\r\n    return(\r\n        <div id=\"header\">\r\n           <img src={Logo} alt =\"logo\"/>\r\n           <h1>To-Do</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { useState }  from \"react\";\r\nimport \"./li.css\";\r\n\r\nconst Li =(props) => {\r\n    const [hideShowDivs , setHideShowDivs] = useState(\"block\");\r\n    const [hideShowInputFields ,setHideShowInputFields] = useState(\"none\");\r\n    const [hideShowTaskIcons ,setHideShowTaskIcons] = useState(\"block\");\r\n    let hrStyle = \"none\";\r\n    let applyOpacity = 1;\r\n    let [todoEditedText , setTodoEditedText] = useState(props.children[0]);\r\n    let [todoEditedTime , setTodoEditedTime] = useState(props.children[1]);\r\n    let [todoEditedDate , setTodoEditedDate] = useState(props.children[2]);\r\n    // const [taskState , setTaskState] = useState(props.state);\r\n    \r\n    if(props.state === true)\r\n        {   \r\n           applyOpacity = 0.4;\r\n           hrStyle = \"block\";\r\n        }else{\r\n            applyOpacity = 1;\r\n            hrStyle = \"none\";\r\n        }\r\n\r\n    const editedTodo = (onTaskEdit , id) => {\r\n        const editedTodoDetails = {\r\n            todoEditedText,\r\n            todoEditedDate,\r\n            todoEditedTime\r\n        }\r\n      \r\n        setHideShowInputFields(\"none\");\r\n        setHideShowDivs(\"block\");\r\n        setHideShowTaskIcons(\"block\");\r\n        onTaskEdit(id,editedTodoDetails);\r\n    }\r\n\r\n    const hideShow = () =>{\r\n        if(hideShowDivs === \"block\" && hrStyle === \"none\" ){\r\n            setHideShowInputFields(\"block\");\r\n            setHideShowTaskIcons(\"none\");\r\n            setHideShowDivs(\"none\");\r\n        }\r\n    }\r\n    const taskDone = (taskDone, id, state) => {\r\n        // taskState ? setTaskState(false) : setTaskState(true);\r\n        taskDone(id,state);\r\n    }\r\n \r\n    return (\r\n        <li name = {props.name}>\r\n            <div id=\"li-content-container\" style = {{opacity : applyOpacity}}>\r\n                <hr style = {{display : hrStyle}}/>\r\n                <i className=\"fas fa-check done\" style = {{display : hideShowTaskIcons}} onClick= {(e) => {e.preventDefault();\r\n                    taskDone(props.onTaskDone,props.id ,props.state)}}></i>\r\n                <div className=\"to-do-detail-container\" title=\"click to edit\" style = {{display : hideShowDivs}} onClick = {hideShow}  >\r\n                    <span >{props.children[0]}</span>\r\n                    <div className=\"date-time-container-list\">\r\n                        <span>{props.children[1]}</span>\r\n                        <span>{props.children[2]}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"to-do-edit-container\" style = {{display : hideShowInputFields}}>\r\n                    <input className=\"to-do-text\" type =\"text\" maxLength = {50} value={todoEditedText} onChange = {(e) => {e.preventDefault();\r\n                        setTodoEditedText(e.target.value)} } />\r\n                    <div className=\"date-time-edit-container\">\r\n                        <input className=\"to-do-date\" type =\"date\" value={todoEditedDate} onChange = {(e) => {\r\n                            e.preventDefault();\r\n                            setTodoEditedDate(e.target.value)\r\n                        } } />\r\n                        <input className=\"to-do-time\" type =\"time\" value={todoEditedTime} onChange = {(e) => {\r\n                            e.preventDefault();\r\n                            setTodoEditedTime(e.target.value);\r\n                        } } />\r\n                        <button className = \"done\" onClick = {() => {editedTodo(props.onTaskEdit ,props.id)}}>Done</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <i className=\"fas fa-times delete\" style = {{display : hideShowTaskIcons}}  onClick = {() => {props.onDelete(props.id)}}></i>\r\n             </div>\r\n         </li>\r\n    )\r\n}\r\n\r\nexport default Li;\r\n","import React , {useState} from \"react\";\r\nimport \"./body.css\";\r\nimport Li from \"../li/li\";\r\n\r\nconst Body = () =>{\r\n    const [currentTodo , setTodo] = useState(\"\");\r\n    const [currentDate , setDate] = useState(\"\");\r\n    const [currentTime , setTime] = useState(\"\");\r\n    const [currentstate , setStateUpdate] = useState(false);\r\n    const [ isTodoUpdated, setTodoUpdated] = useState(false);\r\n    const [currentToDoArray, setToDoarray] = useState([{}]);\r\n    let todoData;\r\n  \r\n    //display list of to dos\r\n    const getToDo = () =>{\r\n        if(currentTodo !== \"\"){\r\n            todoData = {\r\n                todo : currentTodo,\r\n                date : currentDate,\r\n                time : currentTime,\r\n                taskState : false\r\n            }\r\n           setToDoarray([...currentToDoArray , todoData]);\r\n           setTodo(\"\");\r\n           setDate(\"\");\r\n           setTime(\"\");\r\n        }else{\r\n            alert(\"ToDo text is required\");\r\n        }\r\n    }\r\n\r\n    // call this function on cross icon click to delete selected todo\r\n    const taskDelete = (id) => {\r\n        setToDoarray(currentToDoArray.filter( (element , index) => {\r\n            if(index !== id){\r\n                return element;\r\n            }\r\n        }));\r\n    }\r\n\r\n     // call this function on tick icon click to line through and decrese opacity of selected todo\r\n    const taskDone = (id , state) => {\r\n        state ? currentToDoArray[id].taskState = false : currentToDoArray[id].taskState = true;\r\n                setToDoarray(currentToDoArray); \r\n        state ? setStateUpdate(false)  : setStateUpdate(true);\r\n    }\r\n\r\n    const taskEdited = (id , editedTaskObject) => {\r\n        currentToDoArray[id].todo = editedTaskObject.todoEditedText;\r\n        currentToDoArray[id].time = editedTaskObject.todoEditedTime;\r\n        currentToDoArray[id].date = editedTaskObject.todoEditedDate;\r\n        setToDoarray(currentToDoArray);\r\n        isTodoUpdated ? setTodoUpdated(false)  : setTodoUpdated(true);\r\n    }\r\n  \r\n    \r\n    return(\r\n        <div id=\"body\">\r\n            <div id=\"content-container\">\r\n                <form id=\"input-container\" onSubmit = {(e) => {e.preventDefault()}}>\r\n                    <input id=\"task-input-field\" onChange = {(e) => {e.preventDefault();\r\n                        setTodo(e.target.value);\r\n                        }} value= {currentTodo} type=\"text\" placeholder=\"Add To-Do Task\" maxLength={50} />\r\n                    <div id=\"date-time-container\">\r\n                        <div>\r\n                            <input type=\"date\" onChange = {(e) => {setDate(e.target.value)}} value={currentDate}/>\r\n                            <input type=\"time\" onChange = {(e) => {setTime(e.target.value)}} value={currentTime}/>\r\n                        </div>\r\n                         <button id=\"add\" type=\"submit\" onClick={getToDo}><a>+</a></button>\r\n                    </div>\r\n                   \r\n                </form>\r\n                <ol id=\"list-container\">\r\n                    {\r\n                        currentToDoArray.map( (li,index) => {\r\n                            if(index !== 0){\r\n                                return(<Li key={index} \r\n                                           id={index} \r\n                                           state = {li.taskState}\r\n                                           name = {`${li.todo} ${index}`}\r\n                                           onDelete = {taskDelete} \r\n                                           onTaskDone = {taskDone} \r\n                                           onTaskEdit = {taskEdited}\r\n                                           children={[li.todo,li.date,li.time]}\r\n                                        />)\r\n                            }\r\n                        })\r\n                    \r\n                       }\r\n                </ol>\r\n            </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body;","import React from \"react\";\r\nimport Header from \"./components/header/header\";\r\nimport Body from \"./components/body/body\";\r\n\r\nconst App = () =>{\r\n    return(\r\n        <>\r\n          <Header />\r\n          <Body />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDom.render(<App /> , document.getElementById(\"root\"));"],"sourceRoot":""}